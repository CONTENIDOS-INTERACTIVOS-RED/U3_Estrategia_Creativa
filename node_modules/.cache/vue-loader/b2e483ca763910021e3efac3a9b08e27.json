{"remainingRequest":"/home/runner/work/U3_Estrategia_Creativa/U3_Estrategia_Creativa/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U3_Estrategia_Creativa/U3_Estrategia_Creativa/src/views/curso/Tema2.vue?vue&type=template&id=3ac1073b&lang=pug&","dependencies":[{"path":"/home/runner/work/U3_Estrategia_Creativa/U3_Estrategia_Creativa/src/views/curso/Tema2.vue","mtime":1758492216815},{"path":"/home/runner/work/U3_Estrategia_Creativa/U3_Estrategia_Creativa/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Estrategia_Creativa/U3_Estrategia_Creativa/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U3_Estrategia_Creativa/U3_Estrategia_Creativa/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U3_Estrategia_Creativa/U3_Estrategia_Creativa/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Estrategia_Creativa/U3_Estrategia_Creativa/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}